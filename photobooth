<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PixelSnap Photobooth</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Custom CSS for the polaroid effect */
        .polaroid {
            background: white;
            padding: 1rem 1rem 2rem 1rem;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2), 0 6px 20px rgba(0,0,0,0.19);
            transform: rotate(-2deg);
            transition: all 0.3s ease;
        }
        
        .polaroid:hover {
            transform: rotate(0deg) scale(1.05);
            box-shadow: 0 8px 16px rgba(0,0,0,0.2), 0 12px 40px rgba(0,0,0,0.25);
        }
        
        .polaroid:nth-child(even) {
            transform: rotate(2deg);
        }
        
        .polaroid:nth-child(even):hover {
            transform: rotate(0deg) scale(1.05);
        }
        
        .photo-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 2rem;
            padding: 1rem;
        }
        
        /* Animation for captured photos */
        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.8); }
            to { opacity: 1; transform: scale(1); }
        }
        
        .fade-in {
            animation: fadeIn 0.5s ease-out forwards;
        }
        
        /* Webcam preview styling */
        #video-container {
            position: relative;
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }
        
        #video {
            width: 100%;
            display: block;
        }
        
        #canvas {
            display: none;
        }
        
        /* Flash effect */
        .flash {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: white;
            opacity: 0;
            pointer-events: none;
            z-index: 999;
        }
        
        .flash-animate {
            animation: flash 0.5s;
        }
        
        @keyframes flash {
            0% { opacity: 0; }
            10% { opacity: 0.8; }
            100% { opacity: 0; }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-purple-100 to-pink-100 min-h-screen">
    <!-- Flash effect -->
    <div class="flash" id="flash"></div>
    
    <!-- Header -->
    <header class="bg-gradient-to-r from-purple-600 to-pink-500 text-white py-6 shadow-lg">
        <div class="container mx-auto px-4">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="flex items-center mb-4 md:mb-0">
                    <i class="fas fa-camera-retro text-3xl mr-3"></i>
                    <h1 class="text-3xl font-bold">PixelSnap Photobooth</h1>
                </div>
                <div class="flex space-x-4">
                    <button id="startCamera" class="bg-white text-purple-600 px-4 py-2 rounded-full font-semibold hover:bg-purple-100 transition flex items-center">
                        <i class="fas fa-camera mr-2"></i> Start Camera
                    </button>
                    <button id="takePhoto" class="bg-pink-600 text-white px-4 py-2 rounded-full font-semibold hover:bg-pink-700 transition flex items-center" disabled>
                        <i class="fas fa-camera-retro mr-2"></i> Take Photo
                    </button>
                </div>
            </div>
        </div>
    </header>
    
    <main class="container mx-auto px-4 py-8">
        <!-- Camera Preview Section -->
        <section class="mb-12">
            <div id="video-container" class="relative">
                <video id="video" autoplay playsinline></video>
                <canvas id="canvas"></canvas>
                <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4 text-white">
                    <p class="text-center">Smile for the camera! ðŸ˜Š</p>
                </div>
            </div>
        </section>
        
        <!-- Photo Grid Section -->
        <section>
            <h2 class="text-2xl font-bold text-purple-800 mb-6 flex items-center">
                <i class="fas fa-images mr-3"></i> Your Photo Collection
            </h2>
            
            <div id="photoContainer" class="photo-grid">
                <!-- Sample photos (would be replaced with user photos) -->
                <div class="polaroid fade-in">
                    <img src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80" alt="Sample photo" class="w-full h-48 object-cover mb-2">
                    <p class="text-center text-gray-700 font-medium">Sample Photo 1</p>
                </div>
                <div class="polaroid fade-in">
                    <img src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80" alt="Sample photo" class="w-full h-48 object-cover mb-2">
                    <p class="text-center text-gray-700 font-medium">Sample Photo 2</p>
                </div>
                <div class="polaroid fade-in">
                    <img src="https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80" alt="Sample photo" class="w-full h-48 object-cover mb-2">
                    <p class="text-center text-gray-700 font-medium">Sample Photo 3</p>
                </div>
            </div>
        </section>
    </main>
    
    <!-- Footer -->
    <footer class="bg-purple-800 text-white py-6 mt-12">
        <div class="container mx-auto px-4 text-center">
            <p>Â© 2023 PixelSnap Photobooth. All photos are stored locally in your browser.</p>
            <div class="mt-4 flex justify-center space-x-6">
                <a href="#" class="hover:text-pink-300 transition"><i class="fab fa-instagram text-xl"></i></a>
                <a href="#" class="hover:text-pink-300 transition"><i class="fab fa-twitter text-xl"></i></a>
                <a href="#" class="hover:text-pink-300 transition"><i class="fab fa-facebook text-xl"></i></a>
            </div>
        </div>
    </footer>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const video = document.getElementById('video');
            const canvas = document.getElementById('canvas');
            const photoContainer = document.getElementById('photoContainer');
            const startCameraBtn = document.getElementById('startCamera');
            const takePhotoBtn = document.getElementById('takePhoto');
            const flash = document.getElementById('flash');
            
            let stream = null;
            
            // Sample photo data (in a real app, you might store these in localStorage)
            const samplePhotos = [
                {
                    url: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80',
                    title: 'Sample Photo 1'
                },
                {
                    url: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80',
                    title: 'Sample Photo 2'
                },
                {
                    url: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=500&q=80',
                    title: 'Sample Photo 3'
                }
            ];
            
            // Start camera when button is clicked
            startCameraBtn.addEventListener('click', async function() {
                try {
                    stream = await navigator.mediaDevices.getUserMedia({ 
                        video: { 
                            width: { ideal: 1280 },
                            height: { ideal: 720 },
                            facingMode: 'user' 
                        }, 
                        audio: false 
                    });
                    
                    video.srcObject = stream;
                    takePhotoBtn.disabled = false;
                    startCameraBtn.disabled = true;
                    startCameraBtn.classList.remove('bg-white', 'text-purple-600');
                    startCameraBtn.classList.add('bg-gray-300', 'text-gray-600');
                    
                    // Remove sample photos when camera starts
                    photoContainer.innerHTML = '';
                } catch(err) {
                    console.error("Error accessing camera:", err);
                    alert("Could not access the camera. Please make sure you've granted camera permissions.");
                }
            });
            
            // Take photo when button is clicked
            takePhotoBtn.addEventListener('click', function() {
                // Trigger flash effect
                flash.classList.add('flash-animate');
                setTimeout(() => {
                    flash.classList.remove('flash-animate');
                }, 500);
                
                // Play shutter sound
                const shutterSound = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-camera-shutter-click-1123.mp3');
                shutterSound.play();
                
                // Capture photo
                const context = canvas.getContext('2d');
                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                context.drawImage(video, 0, 0, canvas.width, canvas.height);
                
                // Convert canvas to data URL
                const photoDataUrl = canvas.toDataURL('image/png');
                
                // Create a new photo element
                const photoId = 'photo-' + Date.now();
                const photoTitle = 'Photo ' + (photoContainer.children.length + 1);
                
                const photoElement = document.createElement('div');
                photoElement.className = 'polaroid fade-in';
                photoElement.innerHTML = `
                    <img src="${photoDataUrl}" alt="${photoTitle}" class="w-full h-48 object-cover mb-2">
                    <p class="text-center text-gray-700 font-medium">${photoTitle}</p>
                    <div class="flex justify-center mt-2 space-x-2">
                        <button class="download-btn bg-purple-100 text-purple-600 px-3 py-1 rounded text-sm hover:bg-purple-200 transition" data-id="${photoId}">
                            <i class="fas fa-download mr-1"></i> Download
                        </button>
                        <button class="delete-btn bg-pink-100 text-pink-600 px-3 py-1 rounded text-sm hover:bg-pink-200 transition" data-id="${photoId}">
                            <i class="fas fa-trash mr-1"></i> Delete
                        </button>
                    </div>
                `;
                
                // Add photo to the grid
                photoContainer.prepend(photoElement);
                
                // Scroll to show the new photo
                photoElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                
                // Add event listeners to the new buttons
                photoElement.querySelector('.download-btn').addEventListener('click', function() {
                    downloadPhoto(photoDataUrl, photoTitle);
                });
                
                photoElement.querySelector('.delete-btn').addEventListener('click', function() {
                    photoElement.classList.add('opacity-0', 'scale-90', 'transition-all', 'duration-300');
                    setTimeout(() => {
                        photoElement.remove();
                    }, 300);
                });
            });
            
            // Function to download a photo
            function downloadPhoto(dataUrl, fileName) {
                const link = document.createElement('a');
                link.href = dataUrl;
                link.download = fileName + '.png';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
            
            // Add event listeners to sample photo buttons (for demo purposes)
            document.querySelectorAll('.polaroid').forEach(polaroid => {
                const imgSrc = polaroid.querySelector('img').src;
                const title = polaroid.querySelector('p').textContent;
                
                // Add download button to sample photos
                const downloadBtn = document.createElement('button');
                downloadBtn.className = 'download-btn bg-purple-100 text-purple-600 px-3 py-1 rounded text-sm hover:bg-purple-200 transition mt-2 mx-auto block';
                downloadBtn.innerHTML = '<i class="fas fa-download mr-1"></i> Download';
                downloadBtn.addEventListener('click', function() {
                    downloadPhoto(imgSrc, title);
                });
                
                polaroid.querySelector('p').insertAdjacentElement('afterend', downloadBtn);
            });
        });
    </script>
</body>
</html>
